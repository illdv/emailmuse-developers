<WithStyles(Dialog) open={true} maxWidth={false} onClose={[Function]} aria-labelledby="form-dialog-title">
<Dialog classes={{...}} open={true} maxWidth={false} onClose={[Function]} aria-labelledby="form-dialog-title" disableBackdropClick={false} disableEscapeKeyDown={false} fullScreen={false} fullWidth={false} TransitionComponent={[Function: WithTheme]} transitionDuration={{...}}>
<WithStyles(Modal) className="MuiDialog-root-1" BackdropProps={{...}} disableBackdropClick={false} disableEscapeKeyDown={false} onBackdropClick={[undefined]} onEscapeKeyDown={[undefined]} onClose={[Function]} open={true} role="dialog" aria-labelledby="form-dialog-title">
<Modal classes={{...}} className="MuiDialog-root-1" BackdropProps={{...}} disableBackdropClick={false} disableEscapeKeyDown={false} onBackdropClick={[undefined]} onEscapeKeyDown={[undefined]} onClose={[Function]} open={true} role="dialog" aria-labelledby="form-dialog-title" disableAutoFocus={false} disableEnforceFocus={false} disableRestoreFocus={false} hideBackdrop={false} keepMounted={false} manager={{...}} BackdropComponent={[Function: WithStyles]}>
<Portal container={[undefined]} onRendered={[Function]}>
<div className="MuiModal-root-8 MuiDialog-root-1" role="dialog" aria-labelledby="form-dialog-title">
<WithStyles(Backdrop) open={true} onClick={[Function]} transitionDuration={{...}}>
<Backdrop classes={{...}} open={true} onClick={[Function]} transitionDuration={{...}} invisible={false}>
<WithTheme(Fade) appear={true} in={true} timeout={{...}} onClick={[Function]}>
<Fade theme={{...}} appear={true} in={true} timeout={{...}} onClick={[Function]}>
<Transition appear={true} onEnter={[Function]} onExit={[Function]} in={true} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
<div className="MuiBackdrop-root-10" aria-hidden="true" style={{...}} onClick={[Function]} />
</Transition>
        </Fade>
        </WithTheme(Fade)>
        </Backdrop>
        </WithStyles(Backdrop)>
<RootRef rootRef={[Function: rootRef]}>
<WithTheme(Fade) appear={true} in={true} timeout={{...}} onEnter={[undefined]} onEntering={[undefined]} onEntered={[undefined]} onExit={[undefined]} onExiting={[undefined]} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
<Fade theme={{...}} appear={true} in={true} timeout={{...}} onEnter={[undefined]} onEntering={[undefined]} onEntered={[undefined]} onExit={[undefined]} onExiting={[undefined]} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
<Transition appear={true} onEnter={[Function]} onExit={[Function]} in={true} timeout={{...}} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: chainedFunction]} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true}>
<WithStyles(Paper) elevation={24} className="MuiDialog-paper-2" style={{...}} role="document" tabIndex="-1">
<Paper classes={{...}} elevation={24} className="MuiDialog-paper-2" style={{...}} role="document" tabIndex="-1" component="div" square={false}>
<div className="MuiPaper-root-12 MuiPaper-elevation24-38 MuiPaper-rounded-13 MuiDialog-paper-2" style={{...}} role="document" tabIndex="-1">
<form onSubmit={[Function]}>
<WithStyles(DialogTitle) id="form-dialog-title">
<DialogTitle classes={{...}} id="form-dialog-title" disableTypography={false}>
<div className="MuiDialogTitle-root-39" id="form-dialog-title">
<WithStyles(Typography) variant="title">
<Typography classes={{...}} variant="title" align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
<h2 className="MuiTypography-root-40 MuiTypography-title-46">
    Edit image
</h2>
</Typography>
        </WithStyles(Typography)>
        </div>
        </DialogTitle>
        </WithStyles(DialogTitle)>
<WithStyles(DialogContent) className="image-library-dialogs__content">
<DialogContent classes={{...}} className="image-library-dialogs__content">
<div className="MuiDialogContent-root-64 image-library-dialogs__content">
<WithStyles(DialogContentText)>
<DialogContentText classes={{...}}>
<WithStyles(Typography) component="p" variant="subheading" className="MuiDialogContentText-root-65">
<Typography classes={{...}} component="p" variant="subheading" className="MuiDialogContentText-root-65" align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
<p className="MuiTypography-root-40 MuiTypography-subheading-47 MuiDialogContentText-root-65">
    Enter new name of this image and click &#39;Update&#39; to apply changes.
</p>
</Typography>
        </WithStyles(Typography)>
        </DialogContentText>
        </WithStyles(DialogContentText)>
<WithStyles(DialogContentText)>
<DialogContentText classes={{...}}>
<WithStyles(Typography) component="p" variant="subheading" className="MuiDialogContentText-root-65">
<Typography classes={{...}} component="p" variant="subheading" className="MuiDialogContentText-root-65" align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
<p className="MuiTypography-root-40 MuiTypography-subheading-47 MuiDialogContentText-root-65">
Or click &#39;Delete&#39; to delete this image from library.
</p>
        </Typography>
        </WithStyles(Typography)>
        </DialogContentText>
        </WithStyles(DialogContentText)>
<img src="https://infocron.s3.us-east-2.amazonaws.com/user-5/nc6DTVcBCpU3Vnew8QuoZkklwvN2uWukO8fPfrSg.jpeg" className="image-library-dialogs__img" />
<TextField className="image-library-dialogs__inputName" autoFocus={true} margin="dense" id="name" label="Image name" type="input" value="tesla-cat" fullWidth={true} onChange={[Function]} required={false} select={false}>
<WithStyles(FormControl) aria-describedby={[undefined]} className="image-library-dialogs__inputName" error={[undefined]} fullWidth={true} required={false} margin="dense">
<FormControl classes={{...}} aria-describedby={[undefined]} className="image-library-dialogs__inputName" error={false} fullWidth={true} required={false} margin="dense" component="div" disabled={false}>
<div className="MuiFormControl-root-66 MuiFormControl-marginDense-68 MuiFormControl-fullWidth-69 image-library-dialogs__inputName" aria-describedby={[undefined]} onFocus={[Function]} onBlur={[Function]}>
<WithStyles(InputLabel) htmlFor="name">
<InputLabel classes={{...}} htmlFor="name" disableAnimation={false}>
<WithStyles(FormLabel) data-shrink={true} className="MuiInputLabel-root-70 MuiInputLabel-formControl-71 MuiInputLabel-animated-74 MuiInputLabel-shrink-73 MuiInputLabel-marginDense-72" classes={[undefined]} htmlFor="name">
<FormLabel classes={{...}} data-shrink={true} className="MuiInputLabel-root-70 MuiInputLabel-formControl-71 MuiInputLabel-animated-74 MuiInputLabel-shrink-73 MuiInputLabel-marginDense-72" htmlFor="name" component="label">
<label className="MuiFormLabel-root-75 MuiFormLabel-focused-76 MuiInputLabel-root-70 MuiInputLabel-formControl-71 MuiInputLabel-animated-74 MuiInputLabel-shrink-73 MuiInputLabel-marginDense-72" data-shrink={true} htmlFor="name">
        Image name
        </label>
        </FormLabel>
        </WithStyles(FormLabel)>
        </InputLabel>
        </WithStyles(InputLabel)>
<WithStyles(Input) autoComplete={[undefined]} autoFocus={true} defaultValue={[undefined]} disabled={[undefined]} fullWidth={true} multiline={[undefined]} name={[undefined]} rows={[undefined]} rowsMax={[undefined]} type="input" value="tesla-cat" id="name" inputRef={[undefined]} onBlur={[undefined]} onChange={[Function]} onFocus={[undefined]} placeholder={[undefined]} inputProps={[undefined]}>
<Input classes={{...}} autoComplete={[undefined]} autoFocus={true} defaultValue={[undefined]} disabled={[undefined]} fullWidth={true} multiline={false} name={[undefined]} rows={[undefined]} rowsMax={[undefined]} type="input" value="tesla-cat" id="name" inputRef={[undefined]} onBlur={[undefined]} onChange={[Function]} onFocus={[undefined]} placeholder={[undefined]} inputProps={[undefined]} disableUnderline={false}>
<div className="MuiInput-root-80 MuiInput-fullWidth-87 MuiInput-focused-82 MuiInput-formControl-81 MuiInput-underline-84">
<input aria-invalid={false} aria-required={false} autoComplete={[undefined]} autoFocus={true} className="MuiInput-input-88 MuiInput-inputType-91 MuiInput-inputMarginDense-89" defaultValue={[undefined]} disabled={false} id="name" name={[undefined]} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} onKeyDown={[undefined]} onKeyUp={[undefined]} placeholder={[undefined]} readOnly={[undefined]} required={[undefined]} rows={[undefined]} type="input" value="tesla-cat" />
</div>
        </Input>
        </WithStyles(Input)>
        </div>
        </FormControl>
        </WithStyles(FormControl)>
        </TextField>
<TextField className="image-library-dialogs__inputURL" margin="dense" id="url" label="Image URL" type="input" value="https://infocron.s3.us-east-2.amazonaws.com/user-5/nc6DTVcBCpU3Vnew8QuoZkklwvN2uWukO8fPfrSg.jpeg" fullWidth={true} onClick={[Function]} InputProps={{...}} required={false} select={false}>
<WithStyles(FormControl) aria-describedby={[undefined]} className="image-library-dialogs__inputURL" error={[undefined]} fullWidth={true} required={false} margin="dense" onClick={[Function]}>
<FormControl classes={{...}} aria-describedby={[undefined]} className="image-library-dialogs__inputURL" error={false} fullWidth={true} required={false} margin="dense" onClick={[Function]} component="div" disabled={false}>
<div className="MuiFormControl-root-66 MuiFormControl-marginDense-68 MuiFormControl-fullWidth-69 image-library-dialogs__inputURL" aria-describedby={[undefined]} onClick={[Function]} onFocus={[Function]} onBlur={[Function]}>
<WithStyles(InputLabel) htmlFor="url">
<InputLabel classes={{...}} htmlFor="url" disableAnimation={false}>
<WithStyles(FormLabel) data-shrink={true} className="MuiInputLabel-root-70 MuiInputLabel-formControl-71 MuiInputLabel-animated-74 MuiInputLabel-shrink-73 MuiInputLabel-marginDense-72" classes={[undefined]} htmlFor="url">
<FormLabel classes={{...}} data-shrink={true} className="MuiInputLabel-root-70 MuiInputLabel-formControl-71 MuiInputLabel-animated-74 MuiInputLabel-shrink-73 MuiInputLabel-marginDense-72" htmlFor="url" component="label">
<label className="MuiFormLabel-root-75 MuiInputLabel-root-70 MuiInputLabel-formControl-71 MuiInputLabel-animated-74 MuiInputLabel-shrink-73 MuiInputLabel-marginDense-72" data-shrink={true} htmlFor="url">
        Image URL
        </label>
        </FormLabel>
        </WithStyles(FormLabel)>
        </InputLabel>
        </WithStyles(InputLabel)>
<WithStyles(Input) autoComplete={[undefined]} autoFocus={[undefined]} defaultValue={[undefined]} disabled={[undefined]} fullWidth={true} multiline={[undefined]} name={[undefined]} rows={[undefined]} rowsMax={[undefined]} type="input" value="https://infocron.s3.us-east-2.amazonaws.com/user-5/nc6DTVcBCpU3Vnew8QuoZkklwvN2uWukO8fPfrSg.jpeg" id="url" inputRef={[undefined]} onBlur={[undefined]} onChange={[undefined]} onFocus={[undefined]} placeholder={[undefined]} inputProps={[undefined]} startAdornment={{...}}>
<Input classes={{...}} autoComplete={[undefined]} autoFocus={[undefined]} defaultValue={[undefined]} disabled={[undefined]} fullWidth={true} multiline={false} name={[undefined]} rows={[undefined]} rowsMax={[undefined]} type="input" value="https://infocron.s3.us-east-2.amazonaws.com/user-5/nc6DTVcBCpU3Vnew8QuoZkklwvN2uWukO8fPfrSg.jpeg" id="url" inputRef={[undefined]} onBlur={[undefined]} onChange={[undefined]} onFocus={[undefined]} placeholder={[undefined]} inputProps={[undefined]} startAdornment={{...}} disableUnderline={false}>
<div className="MuiInput-root-80 MuiInput-fullWidth-87 MuiInput-formControl-81 MuiInput-underline-84">
<WithStyles(InputAdornment) position="start" className="image-library-dialogs__url-field">
<InputAdornment classes={{...}} position="start" className="image-library-dialogs__url-field" component="div" disableTypography={false}>
<div className="MuiInputAdornment-root-93 MuiInputAdornment-positionStart-94 image-library-dialogs__url-field">
    <pure(Language)>
    <Language>
        <WithStyles(SvgIcon)>
        <SvgIcon classes={{...}} color="inherit" viewBox="0 0 24 24">
        <svg className="MuiSvgIcon-root-96" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true">
        <g>
            <path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z" />
        </g>
    </svg>
</SvgIcon>
</WithStyles(SvgIcon)>
        </Language>
        </pure(Language)>
        </div>
        </InputAdornment>
        </WithStyles(InputAdornment)>
<input aria-invalid={false} aria-required={false} autoComplete={[undefined]} autoFocus={[undefined]} className="MuiInput-input-88 MuiInput-inputType-91 MuiInput-inputMarginDense-89" defaultValue={[undefined]} disabled={false} id="url" name={[undefined]} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} onKeyDown={[undefined]} onKeyUp={[undefined]} placeholder={[undefined]} readOnly={[undefined]} required={[undefined]} rows={[undefined]} type="input" value="https://infocron.s3.us-east-2.amazonaws.com/user-5/nc6DTVcBCpU3Vnew8QuoZkklwvN2uWukO8fPfrSg.jpeg" />
        </div>
        </Input>
        </WithStyles(Input)>
        </div>
        </FormControl>
        </WithStyles(FormControl)>
        </TextField>
        </div>
        </DialogContent>
        </WithStyles(DialogContent)>
<WithStyles(DialogActions)>
<DialogActions classes={{...}} disableActionSpacing={false}>
<div className="MuiDialogActions-root-102">
<WithStyles(Button) onClick={[Function]} className="image-library-dialogs__button--cancel MuiDialogActions-action-103" color="primary">
<Button classes={{...}} onClick={[Function]} className="image-library-dialogs__button--cancel MuiDialogActions-action-103" color="primary" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
<WithStyles(ButtonBase) className="MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--cancel MuiDialogActions-action-103" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-113" onClick={[Function]} component="button" type="button">
<ButtonBase classes={{...}} className="MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--cancel MuiDialogActions-action-103" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-113" onClick={[Function]} component="button" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
<button onBlur={[Function: handleEvent]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-120 MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--cancel MuiDialogActions-action-103" type="button" disabled={false} onClick={[Function]}>
<span className="MuiButton-label-105">
                                                    Cancel
                                                  </span>
<WithStyles(TouchRipple) innerRef={[Function]} center={false}>
<TouchRipple classes={{...}} center={false}>
<TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-123" childFactory={[Function: childFactory]}>
<span className="MuiTouchRipple-root-123" />
</TransitionGroup>
        </TouchRipple>
        </WithStyles(TouchRipple)>
        </button>
        </ButtonBase>
        </WithStyles(ButtonBase)>
        </Button>
        </WithStyles(Button)>
<WithStyles(Button) color="primary" type="submit" className="image-library-dialogs__button--update MuiDialogActions-action-103">
<Button classes={{...}} color="primary" type="submit" className="image-library-dialogs__button--update MuiDialogActions-action-103" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" variant="flat">
<WithStyles(ButtonBase) className="MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--update MuiDialogActions-action-103" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-113" type="submit" component="button">
<ButtonBase classes={{...}} className="MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--update MuiDialogActions-action-103" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-113" type="submit" component="button" centerRipple={false} disableRipple={false} tabIndex="0">
<button onBlur={[Function: handleEvent]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-120 MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--update MuiDialogActions-action-103" type="submit" disabled={false}>
<span className="MuiButton-label-105">
                                                    Update
                                                  </span>
<WithStyles(TouchRipple) innerRef={[Function]} center={false}>
<TouchRipple classes={{...}} center={false}>
<TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-123" childFactory={[Function: childFactory]}>
<span className="MuiTouchRipple-root-123" />
        </TransitionGroup>
        </TouchRipple>
        </WithStyles(TouchRipple)>
        </button>
        </ButtonBase>
        </WithStyles(ButtonBase)>
        </Button>
        </WithStyles(Button)>
<WithStyles(Button) onClick={[Function]} className="image-library-dialogs__button--delete MuiDialogActions-action-103" color="primary">
<Button classes={{...}} onClick={[Function]} className="image-library-dialogs__button--delete MuiDialogActions-action-103" color="primary" component="button" disabled={false} disableFocusRipple={false} fullWidth={false} mini={false} size="medium" type="button" variant="flat">
<WithStyles(ButtonBase) className="MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--delete MuiDialogActions-action-103" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-113" onClick={[Function]} component="button" type="button">
<ButtonBase classes={{...}} className="MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--delete MuiDialogActions-action-103" disabled={false} focusRipple={true} focusVisibleClassName="MuiButton-focusVisible-113" onClick={[Function]} component="button" type="button" centerRipple={false} disableRipple={false} tabIndex="0">
<button onBlur={[Function: handleEvent]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function: handleEvent]} onMouseLeave={[Function: handleEvent]} onMouseUp={[Function: handleEvent]} onTouchEnd={[Function: handleEvent]} onTouchMove={[Function: handleEvent]} onTouchStart={[Function: handleEvent]} tabIndex="0" className="MuiButtonBase-root-120 MuiButton-root-104 MuiButton-flatPrimary-106 image-library-dialogs__button--delete MuiDialogActions-action-103" type="button" disabled={false} onClick={[Function]}>
<span className="MuiButton-label-105">
                                                    Delete
                                                  </span>
<WithStyles(TouchRipple) innerRef={[Function]} center={false}>
<TouchRipple classes={{...}} center={false}>
<TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-123" childFactory={[Function: childFactory]}>
<span className="MuiTouchRipple-root-123" />
        </TransitionGroup>
        </TouchRipple>
        </WithStyles(TouchRipple)>
        </button>
        </ButtonBase>
        </WithStyles(ButtonBase)>
        </Button>
        </WithStyles(Button)>
        </div>
        </DialogActions>
        </WithStyles(DialogActions)>
        </form>
        </div>
        </Paper>
        </WithStyles(Paper)>
        </Transition>
        </Fade>
        </WithTheme(Fade)>
        </RootRef>
        </div>
        </Portal>
        </Modal>
        </WithStyles(Modal)>
        </Dialog>
        </WithStyles(Dialog)>

        ● <ImageLibraryDialog /> › User click on URL input   › he click on the inputURL

        expect(jest.fn()).toBeCalled()

        Expected mock function to have been called.

